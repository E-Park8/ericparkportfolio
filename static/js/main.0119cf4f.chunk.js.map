{"version":3,"sources":["pictures/me.jpg","pages/Home/Home.js","pages/Portfolio/index.js","pages/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","src","me","alt","Button","color","href","target","Portfolio","Contact","Container","Form","id","FormGroup","Label","htmlFor","Input","type","placeholder","rows","App","useState","isOpen","setIsOpen","Navbar","light","expand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,gC,6LC6B5BC,EAxBF,WACX,OACI,oCACF,wBAAIC,UAAU,UAAd,aACA,wBAAIA,UAAU,YAAd,4BACA,yBAAKA,UAAU,YAAYC,IAAOC,IAAIC,IAAI,cAC1C,6BACA,6BACA,6BAASH,UAAU,UACC,wCACA,uIAEI,6BACA,2BAAG,kBAACI,EAAA,EAAD,CAAQJ,UAAU,QAAQK,MAAM,WAAU,uBAAGC,KAAK,mGAAmGN,UAAU,kBAAkBO,OAAO,UAA9I,oBAC7C,2BAAG,kBAACH,EAAA,EAAD,CAAQJ,UAAU,QAAQK,MAAO,QAAO,uBAAGC,KAAK,mDAAmDN,UAAU,eAAeO,OAAO,UAA3F,cAC3C,2BAAG,kBAACH,EAAA,EAAD,CAAQJ,UAAU,QAAQK,MAAO,aAAY,uBAAGC,KAAK,6BAA6BN,UAAU,oBAAoBO,OAAO,UAA1E,mBAAhD,UCZbC,EANG,WAChB,OACE,kD,wCC4BWC,EA7BC,WACd,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMX,UAAU,OACd,6BAASA,UAAU,aACnB,6BAASY,GAAG,UAAUZ,UAAU,wBAC9B,uCACA,6BACA,+BAAI,6CAAJ,wBACA,+BAAI,4CAAJ,oBACA,kBAACa,EAAA,EAAD,CAAWb,UAAU,cACnB,kBAACc,EAAA,EAAD,CAAOC,QAAQ,4BAAf,QACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,QAAQjB,UAAU,eAAeY,GAAG,2BAA2BM,YAAY,yBAEzF,kBAACL,EAAA,EAAD,CAAWb,UAAU,cACnB,kBAACc,EAAA,EAAD,CAAOC,QAAQ,4BAAf,iBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,QAAQjB,UAAU,eAAeY,GAAG,2BAA2BM,YAAY,sBAEzF,kBAACL,EAAA,EAAD,CAAWb,UAAU,cACnB,kBAACc,EAAA,EAAD,CAAOC,QAAQ,+BAAf,WACA,8BAAUf,UAAU,eAAeY,GAAG,8BAA8BO,KAAK,IAAID,YAAY,sCAE3F,kBAACd,EAAA,EAAD,CAAQQ,GAAG,SAASZ,UAAU,kBAAkBiB,KAAK,UAArD,c,gDCqCKG,EA/CH,WAAO,IAAD,EACYC,oBAAS,GADrB,mBACTC,EADS,KACDC,EADC,KAIhB,OACE,kBAAC,IAAD,KACE,6BACE,kBAACC,EAAA,EAAD,CAAQnB,MAAM,QAAQoB,OAAK,EAACC,OAAO,MACjC,kBAACC,EAAA,EAAD,CAAeC,QALR,kBAAML,GAAWD,MAMxB,kBAACO,EAAA,EAAD,CAAUP,OAAQA,EAAQQ,QAAM,GAC9B,kBAACC,EAAA,EAAD,CAAK/B,UAAU,UAAU8B,QAAM,GAC7B,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAS,kBAAC,IAAD,CAAMC,GAAG,uBAAT,UAEX,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAS,kBAAC,IAAD,CAAMC,GAAG,gCAAT,eAEX,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAS,kBAAC,IAAD,CAAMC,GAAG,8BAAT,gBAKjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqBC,UAAWtC,IAClD,kBAAC,IAAD,CAAOqC,KAAK,+BAA+BC,UAAW7B,IACtD,kBAAC,IAAD,CAAO4B,KAAK,6BAA6BC,UAAW5B,MAIxD,4BAAQT,UAAU,gBAElB,kBAACwB,EAAA,EAAD,CAAQnB,MAAM,OAAOoB,OAAK,EAACC,OAAO,MAE5B,kBAACK,EAAA,EAAD,CAAK/B,UAAU,UAAU8B,QAAM,GAC7B,kBAACE,EAAA,EAAD,WCtCMM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0119cf4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.3533951f.jpg\";","import React from 'react'\r\nimport '../../style.css'\r\nimport me from '../../pictures/me.jpg'\r\nimport { Button } from  'reactstrap'\r\n\r\nconst Home = () => {\r\n  return (\r\n      <>\r\n    <h2 className='myName'>Eric Park</h2>\r\n    <h5 className='jobTitle'>Full Stack Web Developer</h5>\r\n    <img className='myPicture' src = {me} alt='Eric Park'/>\r\n    <hr/>\r\n    <div>\r\n    <section className=\"col-12\">\r\n                        <h1>About Me</h1>\r\n                        <p>\r\n                            I am a current student in the Full Stack Web Development bootcamp at the University of California-Irvine. \r\n                            <br/>\r\n                            <p><Button className='col-4' color=\"success\"><a href=\"https://docs.google.com/document/d/1fhR-W9pTb3rxZCmACeilp7PmBP4LjCNYnFZe8KachOY/edit?usp=sharing\" className=\"btn btn-success\" target='_blank'> Online Resume</a></Button></p>\r\n                            <p><Button className='col-4' color ='info'><a href=\"https://www.linkedin.com/in/eric-park-7122821b6/\" className=\"btn btn-info\" target='_blank'>Linkedin</a></Button></p>\r\n                            <p><Button className='col-4' color ='secondary'><a href=\"https://github.com/E-Park8\" className=\"btn btn-secondary\" target='_blank'>Github Profile</a></Button> </p>\r\n                        </p>\r\n\r\n                    </section>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nconst Portfolio = () => {\r\n  return (\r\n    <h1>Apps and Projects</h1>\r\n  )\r\n}\r\n\r\nexport default Portfolio","import React from 'react'\r\nimport { Button, Form, FormGroup, Label, Input, Container } from 'reactstrap'\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Container>\r\n      <Form className=\"row\">\r\n        <section className=\"col-md-2\"></section>\r\n        <section id=\"content\" className=\"text-center col-md-8\">\r\n          <h1>Contact</h1>\r\n          <hr />\r\n          <p> <b>Email Address:</b> epark0995@gmail.com</p>\r\n          <p> <b>Phone Number:</b> (562) 519-8425 </p>\r\n          <FormGroup className=\"form-group\">\r\n            <Label htmlFor=\"exampleFormControlInput1\">Name</Label>\r\n            <Input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Type Full Name Here\" />\r\n          </FormGroup>\r\n          <FormGroup className=\"form-group\">\r\n            <Label htmlFor=\"exampleFormControlInput1\">Email address</Label>\r\n            <Input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\r\n          </FormGroup>\r\n          <FormGroup className=\"form-group\">\r\n            <Label htmlFor=\"exampleFormControlTextarea1\">Message</Label>\r\n            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Want to talk? Send me a message!\"></textarea>\r\n          </FormGroup>\r\n          <Button id=\"Submit\" className=\"btn btn-success\" type=\"submit\">Submit</Button>\r\n        </section>\r\n      </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Contact","import React, { useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Portfolio from './pages/Portfolio'\nimport Contact from './pages/Contact'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n\n} from 'reactstrap'\n\nconst App = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  return (\n    <Router>\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                <NavLink><Link to='/ericparkportfolio/'>Home</Link></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink><Link to='/ericparkportfolio/portfolio'>Portfolio</Link></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink><Link to='/ericparkportfolio/contact'>Contact</Link></NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <Switch>\n          <Route exact path=\"/ericparkportfolio\" component={Home} />\n          <Route path=\"/ericparkportfolio/portfolio\" component={Portfolio} />\n          <Route path=\"/ericparkportfolio/contact\" component={Contact} />\n        </Switch>\n      </div>\n\n      <footer className=\"fixed-bottom\">     \n    \n      <Navbar color=\"dark\" light expand=\"md\">\n\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                \n              </NavItem>\n            </Nav>\n        </Navbar>\n\n      </footer>\n\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}